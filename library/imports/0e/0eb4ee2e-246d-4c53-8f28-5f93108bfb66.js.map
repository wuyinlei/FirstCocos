{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;;AAYR,kBAAU,EAAE,CAAC;;AAEb,YAAI,EAAE;AACF,uBAAS,IAAI;AACb,wBAAY,EAAE,KAAK;SACtB;KACJ;;;AAGD,UAAM,EAAE,kBAAY,EAEnB;;AAEA,qBAAiB,EAAE,6BAAU;;AAEtB,YAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;;AAE/C,YAAI,IAAI,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AACvD,eAAO,IAAI,CAAC;KACf;AACD,YAAQ,EAAE,oBAAU;;AAEhB,YAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;;AAEzB,YAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;;AAEtB,YAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;KACvB;;;AAKJ,UAAM,EAAE,gBAAU,EAAE,EAAE;;AAEnB,YAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,IAAI,CAAC,UAAU,EAAC;;AAE1C,gBAAI,CAAC,QAAQ,EAAE,CAAC;AAChB,mBAAO;SACV;;AAED,YAAI,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;AAC9D,YAAI,UAAU,GAAG,EAAE,CAAC;AACpB,YAAI,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,GAAG,GAAG,UAAU,CAAA,AAAC,CAAC,CAAC;KACjF;CACL,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        // 星星和主角之间的距离小于这个数值时，就会完成收集\n        pickRadius: 0,\n         // 暂存 Game 对象的引用\n        game: {\n            default: null,\n            serializable: false\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n      \n    },\n    \n     getPlayerDistance: function(){\n            //根据player节点的位置判断距离\n            var playerPos = this.game.player.getPosition();\n            //根据两点位置计算两点之间的距离\n            var dist = cc.pDistance(this.node.position, playerPos);\n            return dist;\n        },\n        onPicked: function(){\n            //当星星被收集的时候，调用Game脚本中的接口，生成一个新的星星\n            this.game.spawnNewStar();\n            //调用Game脚本的得分方法\n            this.game.gainScore();\n            //然后销毁当前星星节点\n            this.node.destroy();\n        },\n    \n    \n\n    // called every frame, uncomment this function to activate update callback\n     update: function (dt) {\n        //每帧判断和主角之间的距离是否小于收集距离\n        if(this.getPlayerDistance() < this.pickRadius){\n            //调用收集行为\n            this.onPicked();\n            return;\n        }\n       // 根据 Game 脚本中的计时器更新星星的透明度\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\n        var minOpacity = 50;\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n     },\n});\n"
  ]
}